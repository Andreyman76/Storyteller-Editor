//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StoryTelling.UI;

/// <summary>
///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
/// </summary>
// Этот класс создан автоматически классом StronglyTypedResourceBuilder
// с помощью такого средства, как ResGen или Visual Studio.
// Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
// с параметром /str или перестройте свой проект VS.
[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
internal class MyStrings
{

    private static global::System.Resources.ResourceManager resourceMan;

    private static global::System.Globalization.CultureInfo resourceCulture;

    [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
    internal MyStrings()
    {
    }

    /// <summary>
    ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    internal static global::System.Resources.ResourceManager ResourceManager
    {
        get
        {
            if (object.ReferenceEquals(resourceMan, null))
            {
                global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("StoryTelling.UI.MyStrings", typeof(MyStrings).Assembly);
                resourceMan = temp;
            }
            return resourceMan;
        }
    }

    /// <summary>
    ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
    ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    internal static global::System.Globalization.CultureInfo Culture
    {
        get
        {
            return resourceCulture;
        }
        set
        {
            resourceCulture = value;
        }
    }

    /// <summary>
    ///   Ищет локализованную строку, похожую на Confirm action.
    /// </summary>
    internal static string Confirm
    {
        get
        {
            return ResourceManager.GetString("Confirm", resourceCulture);
        }
    }

    /// <summary>
    ///   Ищет локализованную строку, похожую на Enter new id for story &quot;@id&quot;..
    /// </summary>
    internal static string EnterNewStoryId
    {
        get
        {
            return ResourceManager.GetString("EnterNewStoryId", resourceCulture);
        }
    }

    /// <summary>
    ///   Ищет локализованную строку, похожую на Export story.
    /// </summary>
    internal static string Export
    {
        get
        {
            return ResourceManager.GetString("Export", resourceCulture);
        }
    }

    /// <summary>
    ///   Ищет локализованную строку, похожую на Story exported successfully..
    /// </summary>
    internal static string Exported
    {
        get
        {
            return ResourceManager.GetString("Exported", resourceCulture);
        }
    }

    /// <summary>
    ///   Ищет локализованную строку, похожую на Storyteller Bot story file (*.story)|*.story.
    /// </summary>
    internal static string ExportFile
    {
        get
        {
            return ResourceManager.GetString("ExportFile", resourceCulture);
        }
    }

    /// <summary>
    ///   Ищет локализованную строку, похожую на Image files (*.bmp, *.dib, *.jpg, *.jpeg, *.jpe, *.jfif, *.png, *.gif, *.tif, *.tiff, *.wmf)|*.bmp;*.dib;*.jpg;*.jpeg;*.jpe;*.jfif;*.png;*.gif;*.tif;*.tiff;*.wmf;.
    /// </summary>
    internal static string ImageFiles
    {
        get
        {
            return ResourceManager.GetString("ImageFiles", resourceCulture);
        }
    }

    /// <summary>
    ///   Ищет локализованную строку, похожую на Please, select transition from the list..
    /// </summary>
    internal static string NeedSelectTransition
    {
        get
        {
            return ResourceManager.GetString("NeedSelectTransition", resourceCulture);
        }
    }

    /// <summary>
    ///   Ищет локализованную строку, похожую на Enter new name for transition @transition..
    /// </summary>
    internal static string NewTransitionName
    {
        get
        {
            return ResourceManager.GetString("NewTransitionName", resourceCulture);
        }
    }

    /// <summary>
    ///   Ищет локализованную строку, похожую на Export is not possible: no root story..
    /// </summary>
    internal static string NoRoot
    {
        get
        {
            return ResourceManager.GetString("NoRoot", resourceCulture);
        }
    }

    /// <summary>
    ///   Ищет локализованную строку, похожую на Open project.
    /// </summary>
    internal static string OpenProject
    {
        get
        {
            return ResourceManager.GetString("OpenProject", resourceCulture);
        }
    }

    /// <summary>
    ///   Ищет локализованную строку, похожую на Storyteller Editor project file (*.stp)|*.stp.
    /// </summary>
    internal static string ProjectFile
    {
        get
        {
            return ResourceManager.GetString("ProjectFile", resourceCulture);
        }
    }

    /// <summary>
    ///   Ищет локализованную строку, похожую на Project saved successfully..
    /// </summary>
    internal static string ProjectSaved
    {
        get
        {
            return ResourceManager.GetString("ProjectSaved", resourceCulture);
        }
    }

    /// <summary>
    ///   Ищет локализованную строку, похожую на Save project before closing?.
    /// </summary>
    internal static string SaveBeforeClosing
    {
        get
        {
            return ResourceManager.GetString("SaveBeforeClosing", resourceCulture);
        }
    }

    /// <summary>
    ///   Ищет локализованную строку, похожую на Save project.
    /// </summary>
    internal static string SaveProject
    {
        get
        {
            return ResourceManager.GetString("SaveProject", resourceCulture);
        }
    }

    /// <summary>
    ///   Ищет локализованную строку, похожую на Select an image for story.
    /// </summary>
    internal static string SelectImage
    {
        get
        {
            return ResourceManager.GetString("SelectImage", resourceCulture);
        }
    }

    /// <summary>
    ///   Ищет локализованную строку, похожую на Set a name for transition from &quot;@from&quot; to &quot;@to&quot;..
    /// </summary>
    internal static string SetTransitionName
    {
        get
        {
            return ResourceManager.GetString("SetTransitionName", resourceCulture);
        }
    }

    /// <summary>
    ///   Ищет локализованную строку, похожую на Story with id &quot;@id&quot; already exists!.
    /// </summary>
    internal static string StoryExists
    {
        get
        {
            return ResourceManager.GetString("StoryExists", resourceCulture);
        }
    }

    /// <summary>
    ///   Ищет локализованную строку, похожую на This string is too long!.
    /// </summary>
    internal static string TooLong
    {
        get
        {
            return ResourceManager.GetString("TooLong", resourceCulture);
        }
    }

    /// <summary>
    ///   Ищет локализованную строку, похожую на A transition with the same name already exists in story &quot;@id&quot;!.
    /// </summary>
    internal static string TransitionExists
    {
        get
        {
            return ResourceManager.GetString("TransitionExists", resourceCulture);
        }
    }
}
